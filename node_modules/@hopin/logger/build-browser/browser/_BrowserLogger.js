import { AbstractLogger } from '../shared/_AbstractLogger';
import * as LogLevels from '../types/_LogLevels';
import * as LogColors from '../types/_LogColors';
export class BrowserLogger extends AbstractLogger {
    colorPrefix(logLevel, prefix) {
        const prefixStyles = this.getLevelCSS(logLevel);
        return [`%c${prefix}`, prefixStyles];
    }
    getLevelCSS(logLevel) {
        function getStyles(color) {
            return `background: ${color}; color: white; padding: 2px 0.5em; border-radius: 0.5em`;
        }
        switch (logLevel) {
            case LogLevels.DEBUG:
                return getStyles(LogColors.DEBUG);
            case LogLevels.INFO:
                return getStyles(LogColors.INFO);
            case LogLevels.WARN:
                return getStyles(LogColors.WARN);
            case LogLevels.ERROR:
                return getStyles(LogColors.ERROR);
            case LogLevels.GROUP:
                return getStyles(LogColors.GROUP);
            case LogLevels.LOG:
            default:
                return getStyles(LogColors.LOG);
        }
    }
}
//# sourceMappingURL=_BrowserLogger.js.map